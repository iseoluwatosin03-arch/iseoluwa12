// This file can be auto-generated by Supabase CLI in a real project.
// For now, we'll define it manually based on the schema.
export type Json =
  | string
  | number
  | boolean
  | null
  | { [key: string]: Json | undefined }
  | Json[]

export type Database = {
  public: {
    Tables: {
      profiles: {
        Row: {
          id: string
          email: string
          full_name: string | null
          gender: string | null
          age: number | null
          city: string | null
          state: string | null
          number_of_kids: number | null
          co_parenting: boolean | null
          about: string | null
          photo_url: string | null
          created_at: string
        }
        Insert: {
          id: string
          email: string
          full_name?: string | null
          gender?: string | null
          age?: number | null
          city?: string | null
          state?: string | null
          number_of_kids?: number | null
          co_parenting?: boolean | null
          about?: string | null
          photo_url?: string | null
          created_at?: string
        }
        Update: {
          id?: string
          email?: string
          full_name?: string | null
          gender?: string | null
          age?: number | null
          city?: string | null
          state?: string | null
          number_of_kids?: number | null
          co_parenting?: boolean | null
          about?: string | null
          photo_url?: string | null
          created_at?: string
        }
      }
      likes: {
        Row: {
          id: string
          user_id: string
          liked_user_id: string
          created_at: string
          type: 'like' | 'skip'
        }
        Insert: {
          id?: string
          user_id: string
          liked_user_id: string
          created_at?: string
          type: 'like' | 'skip'
        }
        Update: {
          id?: string
          user_id?: string
          liked_user_id?: string
          created_at?: string
          type?: 'like' | 'skip'
        }
      }
      matches: {
        Row: {
          id: string
          user1_id: string
          user2_id: string
          created_at: string
        }
        Insert: {
          id?: string
          user1_id: string
          user2_id: string
          created_at?: string
        }
        Update: {
          id?: string
          user1_id?: string
          user2_id?: string
          created_at?: string
        }
      }
      messages: {
        Row: {
          id: string
          sender_id: string
          receiver_id: string
          message: string
          created_at: string
        }
        Insert: {
          id?: string
          sender_id: string
          receiver_id: string
          message: string
          created_at?: string
        }
        Update: {
          id?: string
          sender_id?: string
          receiver_id?: string
          message?: string
          created_at?: string
        }
      }
    }
    Views: { [_ in never]: never }
    Functions: {
      get_matches_with_profiles: {
        Args: {
          p_user_id: string
        }
        Returns: {
            id: string
            user1_id: string
            user2_id: string
            created_at: string
            other_user: Json
          }[]
      }
    }
    Enums: { [_ in never]: never }
    CompositeTypes: { [_ in never]: never }
  }
}
